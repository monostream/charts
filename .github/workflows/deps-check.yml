name: Deps Checker

on:
  schedule:
    - cron: '0 8 * * 1-5' 
  workflow_dispatch:

jobs:
  check-updates:
    runs-on: ubuntu-latest
    container: 
      image: monostream/deps-checker:test
      options: --user root
    outputs:
        matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
           
    - name: Setup Git
      run: |
        chown -R $(id -u):$(id -g) $PWD
        git config --global --add safe.directory ${PWD}
        git config user.email "roboterli@users.noreply.github.com"
        git config user.name "Roboterli"
        git fetch origin

    - name: Check and Run Dependency Updates
      run: |
        CLI_EXISTS=$(which deps-checker)
        if [[ -z ${CLI_EXISTS} ]]; then
          echo "ERROR: deps-checker not found"
          exit 1
        fi

        DEPS_FILES=$(find . -name 'deps.json')

        for DEPS_FILE in ${DEPS_FILES}; do
          CHART_PATH=$(dirname "${DEPS_FILE}")
          CHART_NAME=$(basename $CHART_PATH)
          BRANCH_NAME="update/${CHART_NAME}"
        
          if git rev-parse --verify origin/${BRANCH_NAME} > /dev/null 2>&1; then
            echo "Branch ${BRANCH_NAME} already exists, checking it out."
            git checkout ${BRANCH_NAME}
            git pull origin ${BRANCH_NAME}
          else
            echo "Creating new branch ${BRANCH_NAME}."
            git checkout -b ${BRANCH_NAME}
          fi
        
          echo "Checking updates for ${CHART_NAME}"
          
          echo "Saving output to deps-update-${CHART_NAME}.txt"
          deps-checker -f "${DEPS_FILE}" -u > "deps-update-${CHART_NAME}.txt"
        
        
          if git status --porcelain | grep -q "deps-update-${CHART_NAME}.txt"; then
            echo "Changes found for ${CHART_NAME}"
            git add .
            git reset -- deps-update-${CHART_NAME}.txt
            git clean -f
            git commit -m "Update dependencies for ${CHART_NAME}"
            git push origin ${BRANCH_NAME}
            echo "::set-output name=BRANCH_NAME::${BRANCH_NAME}"
            echo "::set-output name=DEPS_UPDATE_FILE::deps-update-${CHART_NAME}.txt"
          else
            echo "No changes for ${CHART_NAME}"
          fi
        done
      id: changes

    - name: Create Pull Request
      if: steps.changes.outputs.BRANCH_NAME != ''
      uses: actions/github-script@v7
      with:
        script: |
          const branchName = `${{ steps.changes.outputs.BRANCH_NAME }}`;
          const depsUpdateFile = `${{ steps.changes.outputs.DEPS_UPDATE_FILE }}`;
          const { repo, owner } = context.repo;
          const fs = require('fs');
          const depsUpdateOutput = fs.readFileSync(depsUpdateFile, 'utf8');

          const { data: existingPRs } = await github.rest.pulls.list({
            owner,
            repo,
            head: `monostream:${branchName}`,
            base: 'main'
          });

          if (existingPRs.length === 0) {
            await github.rest.pulls.create({
              owner,
              repo,
              title: `Update dependencies for ${branchName}`,
              head: branchName,
              base: 'main',
              body: `This PR updates the dependencies for ${branchName}.\n\nDependency Updates:\n${depsUpdateOutput}`,
            });
          }

