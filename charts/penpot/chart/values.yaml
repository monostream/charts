backend:
  affinity: {}
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - all
    enabled: true
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 1001
  image:
    imagePullPolicy: IfNotPresent
    repository: penpotapp/backend
    tag: 1.19.3
  nodeSelector: {}
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  replicaCount: 1
  resources:
    limits: {}
    requests: {}
  service:
    port: 6060
    type: ClusterIP
  tolerations: []
config:
  apiSecretKey: b46a12cb4bedc6b9df8cb3f18c708b65
  assets:
    filesystem:
      directory: /opt/data/assets
    s3:
      accessKeyID: ""
      bucket: ""
      endpointURI: ""
      existingSecret: ""
      region: ""
      secretAccessKey: ""
      secretKeys:
        accessKeyIDKey: ""
        endpointURIKey: ""
        secretAccessKey: ""
    storageBackend: assets-fs
  flags: enable-registration enable-login disable-demo-users disable-demo-warning
  postgresql:
    database: ""
    existingSecret: ""
    host: postgresql.penpot.svc.cluster.local
    password: ""
    port: 5432
    secretKeys:
      passwordKey: ""
      usernameKey: ""
    username: ""
  providers:
    existingSecret: ""
    github:
      clientID: ""
      clientSecret: ""
      enabled: false
    gitlab:
      baseURI: https://gitlab.com
      clientID: ""
      clientSecret: ""
      enabled: false
    google:
      clientID: ""
      clientSecret: ""
      enabled: false
    ldap:
      attributesEmail: mail
      attributesFullname: cn
      attributesPhoto: jpegPhoto
      attributesUsername: uid
      baseDN: ou=people,dc=planetexpress,dc=com
      bindDN: cn=admin,dc=planetexpress,dc=com
      bindPassword: GoodNewsEveryone
      enabled: false
      host: ldap
      port: 10389
      ssl: false
      startTLS: false
    oidc:
      authURI: ""
      baseURI: ""
      clientID: ""
      clientSecret: ""
      emailAttribute: ""
      enabled: false
      nameAttribute: ""
      roles: ""
      rolesAttribute: ""
      scopes: ""
      tokenURI: ""
      userURI: ""
    secretKeys:
      githubClientIDKey: ""
      githubClientSecretKey: ""
      gitlabClientIDKey: ""
      gitlabClientSecretKey: ""
      googleClientIDKey: ""
      googleClientSecretKey: ""
      oidcClientIDKey: ""
      oidcClientSecretKey: ""
  publicURI: http://localhost:8080
  redis:
    database: "0"
    host: redis-headless.penpot.svc.cluster.local
    port: 6379
  registrationDomainWhitelist: ""
  smtp:
    defaultFrom: ""
    defaultReplyTo: ""
    enabled: false
    existingSecret: ""
    host: ""
    password: ""
    port: ""
    secretKeys:
      passwordKey: ""
      usernameKey: ""
    ssl: false
    tls: true
    username: ""
  telemetryEnabled: true
exporter:
  affinity: {}
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - all
    enabled: true
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 1001
  image:
    imagePullPolicy: IfNotPresent
    repository: penpotapp/exporter
    tag: 1.19.3
  nodeSelector: {}
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  replicaCount: 1
  resources:
    limits: {}
    requests: {}
  service:
    port: 6061
    type: ClusterIP
  tolerations: []
frontend:
  affinity: {}
  image:
    imagePullPolicy: IfNotPresent
    repository: penpotapp/frontend
    tag: 1.19.3
  ingress:
    annotations: {}
    enabled: false
    hosts: []
    tls: []
  nodeSelector: {}
  replicaCount: 1
  resources:
    limits: {}
    requests: {}
  service:
    port: 80
    type: ClusterIP
  tolerations: []
fullnameOverride: ""
global:
  imagePullSecrets: []
  postgresqlEnabled: false
  redisEnabled: false
nameOverride: ""
persistence:
  accessModes:
  - ReadWriteOnce
  annotations: {}
  enabled: false
  existingClaim: ""
  size: 8Gi
  storageClass: ""
postgresql:
  auth:
    database: penpot
    password: secretpassword
    username: example
redis:
  auth:
    enabled: false
serviceAccount:
  annotations: {}
  enabled: true
  name: ""
smtp:
  password: ""
  username: ""
