## @userSupplied APISecretKey
## @label API Secret Key
## @type string
## @description Generate with `openssl rand -hex 16` for example

## @userSupplied PostgresPassword
## @label Postgres Password
## @type string
## @description The database password to use
global:
  postgresqlEnabled: true
  redisEnabled: true

frontend:
  ingress:
    enabled: true

    annotations:
      {{- if .Emporium.Annotations }}
      {{- toYaml .Emporium.Annotations | nindent 6 }}
      {{- end }}
      kubernetes.io/tls-acme: "true"

    hosts:
      - host: {{ .Emporium.Integrations.DNS.Hostname }}

    tls:
      - secretName: {{ .Emporium.Name }}-tls
        hosts:
          - {{ .Emporium.Integrations.DNS.Hostname }}

persistence:
  enabled: true
  size: 50Gi

config:
  publicURI: "https://{{ .Emporium.Integrations.DNS.Hostname }}"
  flags: "enable-registration enable-login enable-smtp disable-demo-users disable-demo-warning enable-login-with-oidc"
  apiSecretKey: "{{ .Emporium.UserSupplied.APISecretKey }}"

  postgresql:
    host: {{ .Emporium.Name }}-postgresql
    port: 5432
    database: penpot
    existingSecret: "penpot-secret"
    secretKeys:
      usernameKey: "postgresql-username"
      passwordKey: "postgresql-password"

  redis:
    host: {{ .Emporium.Name }}-redis-headless
    port: 6379
    database: "0"

  smtp:
    enabled: true
    defaultFrom: "{{ .Emporium.Integrations.SMTP.From }}"
    defaultReplyTo: "{{ .Emporium.Integrations.SMTP.ReplyTo }}"
    host: "{{ .Emporium.Integrations.SMTP.Host }}"
    port: "{{ .Emporium.Integrations.SMTP.Port }}"
    tls: true
    existingSecret: "penpot-secret"
    secretKeys:
      usernameKey: "smtp-username"
      passwordKey: "smtp-password"

  providers:
    oidc:
      enabled: true
      baseURI: "{{ .Emporium.Integrations.OIDC.Issuer }}"
      clientID: "{{ .Emporium.Integrations.OIDC.ClientID }}"
      clientSecret: "{{ .Emporium.Integrations.OIDC.ClientSecret }}"
      # authURI: ""
      # tokenURI: ""
      # userURI: ""
      # roles: "role1 role2"
      # rolesAttribute: ""
      # scopes: "scope1 scope2"
      # nameAttribute: ""
      # emailAttribute: ""

smtp:
  username: "{{ .Emporium.Integrations.SMTP.Username }}"
  password: "{{ .Emporium.Integrations.SMTP.Password }}"

postgresql:
  auth:
    username: admin
    password: "{{ .Emporium.UserSupplied.PostgresPassword }}"
    database: penpot

redis:
  architecture: standalone
  replica:
    persistence:
      enabled: false
    replicaCount: 0
