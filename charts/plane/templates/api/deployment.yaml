apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "plane.fullname" . }}-api
  labels:
    {{- include "plane.api.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "plane.api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "plane.api.labels" . | nindent 8 }}
	{{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: api
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          command:
            - "./bin/takeoff"
          env:
            - name: PGUSER
              value: postgres
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: password
            - name: PGHOST
              value: {{ include "plane.fullname" . }}-postgres
            - name: PGDATABASE
              value: {{ .Values.postgresql.auth.database }}
            - name: DATABASE_URL
              value: postgresql://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@{{ include "plane.fullname" . }}-postgresql/{{ .Values.postgresql.auth.database }}
            - name: REDIS_HOST
              value: {{ include "plane.fullname" . }}-redis-master
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_URL
              value: "redis://{{ include "plane.fullname" . }}-redis:6379"
            - name: DOCKERIZED
              value: "1"
            - name: ENABLE_SIGNUP
              value: "1"
            - name: ENABLE_EMAIL_PASSWORD
              value: "1"
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "plane.fullname" . }}
                  key: secret-key
          ports:
            - name: http
              containerPort: {{ .Values.api.service.port }}
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        - name: worker
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          command:
            - "./bin/worker"
          env:
            - name: PGUSER
              value: {{ .Values.postgresql.auth.username }}
            - name: PGPASSWORD
              value: {{ .Values.postgresql.auth.password }}
            - name: PGHOST
              value: {{ include "plane.fullname" . }}-postgres
            - name: PGDATABASE
              value: {{ .Values.postgresql.auth.database }}
            - name: DATABASE_URL
              value: postgresql://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@{{ include "plane.fullname" . }}-postgresql/{{ .Values.postgresql.auth.database }}
            - name: REDIS_HOST
              value: {{ include "plane.fullname" . }}-redis-master
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_URL
              value: "redis://{{ include "plane.fullname" . }}-redis:6379"
            - name: DOCKERIZED
              value: "1"
            - name: ENABLE_SIGNUP
              value: "1"
            - name: ENABLE_EMAIL_PASSWORD
              value: "1"
            - name: SECRET_KEY
              value: {{ .Values.api.secretKey }}
          ports:
            - name: http
              containerPort: {{ .Values.api.service.port }}
              protocol: TCP
        - name: beat-worker
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          command:
            - "./bin/beat"
          env:
            - name: PGUSER
              value: {{ .Values.postgresql.auth.username }}
            - name: PGPASSWORD
              value: {{ .Values.postgresql.auth.password }}
            - name: PGHOST
              value: {{ include "plane.fullname" . }}-postgres
            - name: PGDATABASE
              value: {{ .Values.postgresql.auth.database }}
            - name: DATABASE_URL
              value: postgresql://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@{{ include "plane.fullname" . }}-postgresql/{{ .Values.postgresql.auth.database }}
            - name: REDIS_HOST
              value: {{ include "plane.fullname" . }}-redis-master
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_URL
              value: "redis://{{ include "plane.fullname" . }}-redis:6379"
            - name: DOCKERIZED
              value: "1"
            - name: ENABLE_SIGNUP
              value: "1"
            - name: ENABLE_EMAIL_PASSWORD
              value: "1"
            - name: SECRET_KEY
              value: {{ .Values.api.secretKey }}
          ports:
            - name: http
              containerPort: {{ .Values.api.service.port }}
              protocol: TCP
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
