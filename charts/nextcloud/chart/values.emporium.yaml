nextcloud:
  ingress:
    enabled: true

    annotations:
      kubernetes.io/tls-acme: "true"
      {{- if .Emporium.Annotations }}
      {{- toYaml .Emporium.Annotations | nindent 6 }}
      {{- end }}

      nginx.ingress.kubernetes.io/proxy-body-size: 5000m
    hosts:
      - host: {{ .Emporium.Integrations.DNS.Hostname }}
        paths:
          - path: /
            pathType: Prefix

    tls:
      - secretName: nextcloud-tls
        hosts:
          - {{ .Emporium.Integrations.DNS.Hostname }}

  phpClientHttpsFix:
    enabled: true
    protocol: https

  nextcloud:
    host: {{ .Emporium.Integrations.DNS.Hostname }}
    username:
    password:
    ## Use an existing secret
    existingSecret:
      enabled: true
      secretName: nextcloud-admin-credentials
      usernameKey: nextcloud-username
      passwordKey: nextcloud-password
      tokenKey: nextcloud-token
      # smtpUsernameKey: smtp-username
      # smtpPasswordKey: smtp-password

    datadir: /var/www/html/data
    persistence:
      subPath:
    mail:
      enabled: false
      fromAddress: user
      domain: {{ .Emporium.Integrations.DNS.Hostname }}
      smtp:
        host: domain.com
        secure: ssl
        port: 465
        authtype: LOGIN
        name: user
        password: pass


  externalDatabase:
    enabled: true

    ## Supported database engines: mysql or postgresql
    type: postgres

    ## Database host
    host: nextcloud-postgres-0

    ## Database user
    user: nextcloud

    ## Database password
    password: nextcloud

    ## Database name
    database: nextcloud

    ## Use a existing secret
    existingSecret:
      enabled: true
      secretName: nextcloud-postgresql
      usernameKey: postgres-password
      passwordKey: password

  postgresql:
    enabled: true
    global:
      postgresql:
        # global.postgresql.auth overrides postgresql.auth
        auth:
          username:
          password:
          database: nextcloud
          existingSecret: "nextcloud-postgresql"
          secretKeys:
            adminPasswordKey: "password"
            userPasswordKey: "postgres-password"
            replicationPasswordKey: ""
    primary:
      persistence:
        enabled: true
        size: 8Gi
        # Use an existing Persistent Volume Claim (must be created ahead of time)
        # existingClaim: ""
        # storageClass: ""

  ##
  ## Redis chart configuration
  ## for more options see https://github.com/bitnami/charts/tree/main/bitnami/redis
  ##
  redis:
    enabled: true
    auth:
      enabled: true
      password:
      existingSecret: "nextcloud-redis"
      existingSecretPasswordKey: "redis-password"


## @userSupplied StorageSize
## @label StorageSize
## @type string
## @description The size of the storage volume
  persistence:
    # Nextcloud Data (/var/www/html)
    enabled: true
    annotations: {}

    accessMode: ReadWriteOnce
    size: "{{ .Emporium.UserSupplied.StorageSize }}"

    ## Use an additional pvc for the data directory rather than a subpath of the default PVC
    ## Useful to store data on a different storageClass (e.g. on slower disks)
    nextcloudData:
      enabled: false
      subPath:
      annotations: {}
      # storageClass: "-"
      # existingClaim:
      accessMode: ReadWriteOnce
      size: 100Gi
