{{- if gt (.Values.replicaCount | int) 1 }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "artifacts.fullname" . }}-worker
  labels:
    {{- include "artifacts.workerLabels" . | nindent 4 }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      {{- include "artifacts.workerSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "artifacts.workerSelectorLabels" . | nindent 8 }}
      {{- with .Values.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "artifacts.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["artifacts"]
          args: ["--gc-enabled"]
          env:
            - name: BASE_URL
              value: {{ print (.Values.hosts.https | ternary "https://" "http://") (required "missing required value hosts.domain" .Values.hosts.domain) | quote }}
            {{- if .Values.auth.basic.username }}
            - name: USERNAME
              value: {{ .Values.auth.basic.username | quote }}
            {{- end }}
            {{- if .Values.auth.basic.password }}
            - name: PASSWORD
              value: {{ .Values.auth.basic.password | quote }}
            {{- end }}
            {{- if .Values.storage.azure.account }}
            - name: AZURE_STORAGE_ACCOUNT
              value: {{ .Values.storage.azure.account | quote }}
            {{- end }}
            {{- if .Values.storage.azure.key }}
            - name: AZURE_STORAGE_KEY
              value: {{ .Values.storage.azure.key | quote }}
            {{- end }}
            {{- if .Values.storage.azure.container }}
            - name: AZURE_STORAGE_CONTAINER
              value: {{ .Values.storage.azure.container | quote }}
            {{- end }}
            {{- if .Values.storage.s3.url }}
            - name: S3_STORAGE_URL
              value: {{ .Values.storage.s3.url | quote }}
            {{- end }}
            {{- if .Values.storage.s3.keyId }}
            - name: S3_STORAGE_ACCESS_KEY_ID
              value: {{ .Values.storage.s3.keyId | quote }}
            {{- end }}
            {{- if .Values.storage.s3.secretKey }}
            - name: S3_STORAGE_SECRET_ACCESS_KEY
              value: {{ .Values.storage.s3.secretKey | quote }}
            {{- end }}
            {{- if .Values.storage.s3.bucket }}
            - name: S3_STORAGE_BUCKET
              value: {{ .Values.storage.s3.bucket | quote }}
            {{- end }}
            {{- if .Values.storage.filesystem.path }}
            - name: STORAGE_PATH
              value: {{ .Values.storage.filesystem.path | quote }}
            {{- end }}
            {{- if .Values.auth.oidc.issuer }}
            - name: OIDC_ISSUER
              value: {{ .Values.auth.oidc.issuer | quote }}
            {{- end }}
            {{- if .Values.auth.oidc.clientId }}
            - name: OIDC_CLIENT_ID
              value: {{ .Values.auth.oidc.clientId | quote }}
            {{- end }}
            {{- if .Values.auth.oidc.clientSecret }}
            - name: OIDC_CLIENT_SECRET
              value: {{ .Values.auth.oidc.clientSecret | quote }}
            {{- end }}
            - name: COOKIE_SIGNING_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.cookie.hashKey.secretName | default (include "artifacts.fullname" .) }}
                  key: {{ .Values.auth.cookie.hashKey.secretKey | default "cookie-signing-key" }}
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.encryptionKey.secretName | default (include "artifacts.fullname" .) }}
                  key: {{ .Values.encryptionKey.secretKey | default "encryption-key" }}
            {{- if .Values.disableUI }}
            - name: DISABLE_UI
              value: {{ .Values.disableUI | quote }}
            {{- end }}
            {{- if gt (.Values.replicaCount | int) 1 }}
            - name: DEPLOYMENT_MODE
              value: distributed
            {{- end }}
            {{- if lt (.Values.replicaCount | int) 2 }}
            - name: DATABASE_DSN
              value: {{ (.Values.database.url | default "sqlite:///data/inventory.sqlite") | quote }}
            {{- end }}
            {{- if gt (.Values.replicaCount | int) 1 }}
            - name: DATABASE_DSN
              value: {{ required "missing required value database.url" .Values.database.url | quote }}
            {{- end }}
            - name: TMPDIR
              value: /data/tmp
            {{- if .Values.csp.enabled }}
            - name: CSP_POLICY
              value: {{ .Values.csp.policy | quote }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data
      initContainers:
        - name: init-volume
          image: busybox
          command: [ 'sh', '-c', 'chown 1000:1000 /data' ]
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "artifacts.fullname" .) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
{{- end }}