apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "huginn.fullname" . }}
  labels:
    {{- include "huginn.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "huginn.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "huginn.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "huginn.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers: # add this block
        - name: wait-for-postgres
          image: postgres:12.6
          command:
            - /bin/sh
            - -c
            - >
              until pg_isready -h {{ .Release.Name }}-postgresql.{{ .Release.Namespace }}.svc.cluster.local -U {{ .Values.postgresql.auth.username }} -d {{ .Values.postgresql.auth.database }}; do
                echo 'Waiting for Postgres to start';
                sleep 2;
              done
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PORT
              value: "{{ .Values.service.port }}"
            - name: DATABASE_ADAPTER
              value: "postgresql"
            - name: DATABASE_ENCODING
              value: "utf8"
            - name: DATABASE_RECONNECT
              value: "true"
            - name: DATABASE_NAME
              value: "{{ .Values.postgresql.auth.database }}"
            - name: DATABASE_USERNAME
              value: "{{ .Values.postgresql.auth.username }}"
            - name: DATABASE_PASSWORD
              value: "{{ .Values.postgresql.auth.password }}"
            - name: DATABASE_HOST
              value:  "{{ .Release.Name }}-postgresql.{{ .Release.Namespace }}.svc.cluster.local"
            - name: DATABASE_PORT
              value: "5432"
            - name: APP_SECRET_TOKEN
              value: "{{ .Values.huginn.appSecretToken }}"
            - name: DOMAIN
              value: "{{ .Values.huginn.domain }}"
            - name: INVITATION_CODE
              value: "{{ .Values.huginn.invitationCode }}"
            - name: SKIP_INVITATION_CODE
              value: "{{ .Values.huginn.skipInvitationCode }}"
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
