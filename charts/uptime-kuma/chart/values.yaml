affinity: {}
autoscaling:
  enabled: false
  maxReplicas: 100
  minReplicas: 1
  targetCPUUtilizationPercentage: 80
fullnameOverride: ""
image:
  pullPolicy: Always
  repository: louislam/uptime-kuma
  tag: 1.23.11-debian
imagePullSecrets: []
ingress:
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/server-snippets: |
      location / {
        proxy_set_header Upgrade $http_upgrade;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_cache_bypass $http_upgrade;
      }
  className: ""
  enabled: false
  hosts:
  - host: chart-example.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls: []
livenessProbe:
  enabled: true
  initialDelaySeconds: 15
  timeoutSeconds: 2
nameOverride: ""
nodeSelector: {}
persistence:
  accessMode: ReadWriteOnce
  enabled: true
  size: 10Gi
podAnnotations: {}
podSecurityContext: {}
readinessProbe:
  enabled: true
  initialDelaySeconds: 5
replicaCount: 1
resources: {}
securityContext: {}
service:
  port: 3001
  type: ClusterIP
serviceAccount:
  annotations: {}
  create: false
  name: ""
tolerations: []
